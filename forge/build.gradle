plugins {
    id "com.github.johnrengelman.shadow" version "7.1.2"
}

architectury {
    platformSetupLoomIde()
    forge()
}


loom {
    accessWidenerPath = project(":common").loom.accessWidenerPath

    forge {
        convertAccessWideners = true
        extraAccessWideners.add loom.accessWidenerPath.get().asFile.name

        mixinConfig  "sawmill.mixins.json"
        mixinConfig  "sawmill-common.mixins.json"
    }
}

configurations {
    common
    shadowCommon // Don't use shadow from the shadow plugin because we don't want IDEA to index this.
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentForge.extendsFrom common
}


processResources {
    // input variables of this task:
    var replaceProperties = [
            minecraft_version    : minecraft_version,
            minecraft_min_version: minecraft_min_version,
            minecraft_max_version: minecraft_max_version,
            pack_format_number   : pack_format_number,

            mod_id               : mod_id,
            mod_name             : mod_name,
            mod_version          : mod_version,
            mod_license          : mod_license,
            mod_authors          : mod_authors,
            mod_description      : mod_description,
            mod_credits          : mod_credits,
            mod_homepage         : mod_homepage,
            mod_github           : mod_github,

            neo_version          : neo_version,
            neo_version_range    : neo_version_range,
            loader_version_range : loader_version_range,
    ]
    // setting them as input
    inputs.properties replaceProperties

    filesMatching(['META-INF/mods.toml', 'pack.mcmeta', 'update.json']) {
        expand replaceProperties + [project: project]
    }
}

shadowJar {
    exclude "fabric.mod.json"
    exclude "architectury.common.json"

    configurations = [project.configurations.shadowCommon]
    archiveClassifier = "dev-shadow"
}

remapJar {
    input.set shadowJar.archiveFile
    dependsOn shadowJar
    archiveClassifier = null
}

jar {
    archiveClassifier = "dev"
}

sourcesJar {
    def commonSources = project(":common").sourcesJar
    dependsOn commonSources
    from commonSources.archiveFile.map { zipTree(it) }
}

components.java {
    withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
        skip()
    }
}

publishing {
    publications {
        mavenForge(MavenPublication) {
            artifactId = rootProject.mod_id + "-" + project.name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        maven {
            url = "https://www.cursemaven.com"
            allowInsecureProtocol = true
        }
    }
}


// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }


repositories{
    // Built mods
    flatDir {
        dirs "mods"
    }
    mavenCentral()
}

dependencies {
    forge "net.minecraftforge:forge:1.20.1-47.2.1"

    common(project(path: ":common", configuration: "namedElements")) { transitive false }
    shadowCommon(project(path: ":common", configuration: "transformProductionForge")) { transitive = false }

    implementation(annotationProcessor("io.github.llamalad7:mixinextras-common:${mixin_extras_version}"))
    implementation(include("io.github.llamalad7:mixinextras-forge:${mixin_extras_version}"))
    annotationProcessor 'net.fabricmc:sponge-mixin:0.12.5+mixin.0.8.5'

   // modRuntimeOnly("org.violetmoon.quark:Quark-4.0-beta-426")
   // modRuntimeOnly("org.violetmoon.zeta:Zeta-1.0-beta-1")
    modImplementation("curse.maven:jei-238222:5846810")
    modImplementation("curse.maven:repurposed-structures-368293:4823487")
    modImplementation("curse.maven:farmers-delight-398521:6154802")
    modImplementation("curse.maven:my-nethers-delight-1003673:6529919")
    //modImplementation("curse.maven:selene-499980:5093417")
    //modImplementation("curse.maven:framedblocks-441647:5143589")
    modImplementation("net.mehvahdjukaar:moonlight-forge:${moonlight_version}")
    //modImplementation("cy.jdkdigital.productivelib:productivelib-1.20.1-0.0.4")
    //modImplementation("cy.jdkdigital.productivetrees:productivetrees-1.20.1-0.2.2")

    //modCompileOnly("org.violetmoon.quark:Quark-4.0-433")
    //modCompileOnly("org.violetmoon.zeta:Zeta-1.0-12")

    implementation 'org.jetbrains:annotations:22.0.0'
}
